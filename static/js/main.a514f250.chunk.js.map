{"version":3,"sources":["components/tablet/styles/main.module.scss","components/tablet/AppPane.tsx","components/tablet/components/Buttons.tsx","components/tablet/Navigation.tsx","components/tablet/tools/time.ts","components/tablet/Status.tsx","components/tablet/hooks/async.ts","components/tablet/Tablet.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Content","height","width","useMemo","AppPane","className","styles","appPane","props","RippleButton","onClick","children","navigation_icon","Home","handleClick","useCallback","navigation_icon__home","Background","navigation_icon__background","Return","navigation_icon__return","Navigation","navigation","getTime","_padTime","time","slice","date","Date","hours","getHours","minutes","getMinutes","Time","useState","setTime","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","status_collection__time","StatusFirstGroup","Status","status","ContentRouter","exact","path","Tablet","apps","isRouted","tablet","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a514f250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"breakpoint_small\":\"80px\",\"breakpoint_medium\":\"100px\",\"breakpoint_large\":\"200px\",\"status\":\"main_status__1DFoQ\",\"status_collection__time\":\"main_status_collection__time__3cfd6\",\"navigation\":\"main_navigation__3titd\",\"navigation_icon\":\"main_navigation_icon__3cjux\",\"navigation_icon__return\":\"main_navigation_icon__return__8jk0w\",\"navigation_icon__home\":\"main_navigation_icon__home__23CdF\",\"navigation_icon__background\":\"main_navigation_icon__background__3uFL3\",\"appPane\":\"main_appPane__3X458\",\"tablet\":\"main_tablet__1LxcB\"};","import { useEffect } from \"react\"\r\nimport { FunctionComponent, useMemo } from \"react\"\r\nimport AutoSizer, { Size } from \"react-virtualized-auto-sizer\"\r\nimport styles from \"./styles/main.module.scss\"\r\n\r\ntype TPosition = { x: number, y: number }\r\ntype TAppTypes = \"app\" | \"folder\"\r\ntype TApp = {\r\n  title: string\r\n  type: TAppTypes\r\n  position: TPosition\r\n}\r\n\r\nconst App: FunctionComponent<TApp> = ({ title, type }) => {\r\n  return (\r\n    <div>\r\n      {title}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Content: FunctionComponent<Size> = ({ height, width }) => {\r\n  const pageCount = useMemo(() => {\r\n\r\n  }, [height, width])\r\n\r\n  // const mockApps = useMemo(() => {\r\n  //   const apps: TApp[] = [\r\n  //     {\r\n  //       title: \"Portfolio\",\r\n  //       type: \"folder\",\r\n  //       position: { x: 3, y: 3 }\r\n  //     }\r\n  //   ]\r\n  // }, [])\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const AppPane = () => {\r\n  return (\r\n    <div className={styles.appPane}>\r\n      <AutoSizer>\r\n        {(props) => <Content {...props} />}\r\n      </AutoSizer>\r\n    </div>\r\n\r\n  )\r\n}","import { FunctionComponent } from \"react\"\r\nimport styles from '../styles/main.module.scss'\r\n\r\ntype TRippleButtonProps = {\r\n  onClick: () => void \r\n}\r\n\r\nexport const RippleButton: FunctionComponent<TRippleButtonProps> = (\r\n  { \r\n    onClick,\r\n    children \r\n  }\r\n) => {\r\n  return (\r\n    <button className={styles.navigation_icon} onClick={onClick}>\r\n      {children}\r\n    </button>\r\n  )\r\n}","import { useCallback } from 'react';\r\nimport { RippleButton } from './components/Buttons';\r\nimport styles from './styles/main.module.scss';\r\n\r\nconst Home = () => {\r\n  const handleClick = useCallback(() => {}, [])\r\n  return (\r\n    <RippleButton onClick={handleClick}>\r\n      <div className={styles.navigation_icon__home} />\r\n    </RippleButton>\r\n  )\r\n} \r\n\r\nconst Background = () => {\r\n  const handleClick = useCallback(() => {}, [])\r\n  return (\r\n    <RippleButton onClick={handleClick}>\r\n      <div className={styles.navigation_icon__background} />\r\n    </RippleButton>\r\n  )\r\n} \r\n\r\nconst Return = () => {\r\n  const handleClick = useCallback(() => {}, [])\r\n  return (\r\n    <RippleButton onClick={handleClick}>\r\n      <div className={styles.navigation_icon__return}/>\r\n    </RippleButton>\r\n  )\r\n}\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <div className={styles.navigation}>\r\n      <Background />\r\n      <Home />\r\n      <Return />\r\n    </div>\r\n  )\r\n}","export const getTime = () => {\r\n  const _padTime = (time: number) => (\"0\" + time).slice(-2)\r\n\r\n  const date = new Date()\r\n  const hours = _padTime(date.getHours())\r\n  const minutes = _padTime(date.getMinutes())\r\n  // const seconds = _padTime(date.getSeconds())\r\n  // return `${hours}:${minutes}:${seconds}`\r\n  return `${hours}:${minutes}`\r\n}","import { useState } from 'react'\r\nimport { useInterval } from './hooks/async'\r\nimport styles from './styles/main.module.scss'\r\nimport { getTime } from './tools/time'\r\n\r\nconst Time = () => {\r\n  const [time, setTime] = useState(getTime())\r\n  useInterval(() => setTime(getTime()), 60 * 1000)\r\n  return (\r\n    <div className={styles.status_collection__time}>\r\n      {time}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StatusFirstGroup = () =>  (\r\n  <div>\r\n    <Time />\r\n  </div>\r\n)\r\n\r\nexport const Status = () => (\r\n  <div className={styles.status}>\r\n    <StatusFirstGroup />\r\n  </div>\r\n)","import { useRef, useEffect } from \"react\"\r\n\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nexport const useInterval = (callback: () => void, delay: number) => {\r\n  const savedCallback = useRef<any>()\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback\r\n  }, [callback])\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    const tick = () => savedCallback.current()\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay)\r\n      return () => clearInterval(id)\r\n    }\r\n  }, [delay])\r\n}","import { FunctionComponent } from 'react'\r\nimport { AppPane } from './AppPane'\r\nimport { Navigation } from './Navigation'\r\nimport { Status } from './Status'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport styles from './styles/main.module.scss'\r\n\r\nexport type TApp = any\r\nexport type TTablet = {\r\n  isRouted?: boolean\r\n  apps?: TApp[]\r\n}\r\n\r\nconst ContentRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <AppPane />\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport const Tablet: FunctionComponent<TTablet> = (\r\n  {\r\n    apps,\r\n    isRouted\r\n  }\r\n) => {\r\n  return (\r\n    <div className={styles.tablet}>\r\n      <Status />\r\n      <ContentRouter />\r\n      <Navigation />\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport { Tablet } from './components/tablet/Tablet';\n\nconst App = () => (\n  <div className=\"App\">\n    <Tablet />\n  </div>\n)\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}